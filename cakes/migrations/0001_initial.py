# Generated by Django 5.2.4 on 2025-07-16 00:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('category', models.CharField(choices=[('chocolate', 'Bolos de Chocolate'), ('brancos', 'Bolos Brancos'), ('zero_acucar', 'Bolos Zero Açúcar'), ('caseiros', 'Bolos Caseiros'), ('casamento', 'Bolos de Casamento'), ('aniversario', 'Bolos de Aniversário'), ('infantil', 'Bolos Infantis'), ('tematicos', 'Bolos Temáticos'), ('gourmet', 'Bolos Gourmet'), ('naked_cake', 'Naked Cakes'), ('red_velvet', 'Red Velvet'), ('kit_festa', 'Kit Festa'), ('outros', 'Outros')], max_length=20, verbose_name='Categoria')),
                ('customizable', models.BooleanField(default=False, verbose_name='Personalizável')),
                ('estimated_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso estimado (kg)')),
                ('is_available_for_delivery', models.BooleanField(default=True, verbose_name='Disponível para entrega')),
                ('is_available_for_pickup', models.BooleanField(default=True, verbose_name='Disponível para retirada')),
                ('production_time_days', models.PositiveIntegerField(default=1, verbose_name='Tempo de produção (dias)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('internal_notes', models.TextField(blank=True, null=True, verbose_name='Notas internas')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
        ),
        migrations.CreateModel(
            name='CakeComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topping', models.CharField(max_length=100, verbose_name='Cobertura')),
                ('cake', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='composition', to='cakes.cake')),
            ],
        ),
        migrations.CreateModel(
            name='CakeAllergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('gluten', 'Glúten'), ('lactose', 'Lactose'), ('castanhas', 'Castanhas'), ('ovos', 'Ovos'), ('soja', 'Soja')], max_length=50, verbose_name='Alergênico')),
                ('present', models.BooleanField(verbose_name='Presente')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergens', to='cakes.cakecomposition')),
            ],
        ),
        migrations.CreateModel(
            name='CakeFlavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('massa', 'Massa'), ('recheio', 'Recheio'), ('cobertura', 'Cobertura')], max_length=20, verbose_name='Tipo')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flavors', to='cakes.cakecomposition')),
            ],
        ),
        migrations.CreateModel(
            name='CakeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL da imagem')),
                ('image_type', models.CharField(choices=[('principal', 'Principal'), ('galeria', 'Galeria'), ('detalhe', 'Detalhe')], max_length=20, verbose_name='Tipo')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cakes.cake')),
            ],
        ),
        migrations.CreateModel(
            name='CakeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Ingrediente')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='cakes.cakecomposition')),
            ],
        ),
        migrations.CreateModel(
            name='CakeSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=20, verbose_name='Tamanho')),
                ('serves', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Serve (pessoas)')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='cakes.cake')),
            ],
        ),
        migrations.CreateModel(
            name='NutritionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portion_description', models.CharField(default='Porção de 100g (1 fatia)', max_length=100, verbose_name='Descrição da porção')),
                ('energy_kcal', models.PositiveIntegerField(verbose_name='Valor energético (kcal)')),
                ('energy_kj', models.PositiveIntegerField(verbose_name='Valor energético (kJ)')),
                ('carbohydrates_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Carboidratos (g)')),
                ('proteins_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Proteínas (g)')),
                ('total_fats_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Gorduras totais (g)')),
                ('saturated_fats_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Gorduras saturadas (g)')),
                ('trans_fats_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Gorduras trans (g)')),
                ('fiber_g', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Fibra alimentar (g)')),
                ('sodium_mg', models.PositiveIntegerField(verbose_name='Sódio (mg)')),
                ('vd_energy', models.PositiveIntegerField(default=0, verbose_name='VD% Energia')),
                ('vd_carbohydrates', models.PositiveIntegerField(default=0, verbose_name='VD% Carboidratos')),
                ('vd_proteins', models.PositiveIntegerField(default=0, verbose_name='VD% Proteínas')),
                ('vd_total_fats', models.PositiveIntegerField(default=0, verbose_name='VD% Gorduras totais')),
                ('vd_saturated_fats', models.PositiveIntegerField(default=0, verbose_name='VD% Gorduras saturadas')),
                ('vd_fiber', models.PositiveIntegerField(default=0, verbose_name='VD% Fibra alimentar')),
                ('vd_sodium', models.PositiveIntegerField(default=0, verbose_name='VD% Sódio')),
                ('cake', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutritional_info', to='cakes.cake')),
            ],
        ),
    ]
